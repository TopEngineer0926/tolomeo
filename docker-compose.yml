version: "3"
services:
  proxy:
    container_name: "proxy"
    image: "proxy"
    build: "./proxy"
    networks:
      - default

  web:
    container_name: "backend"
    image: "backend"
    build: "./code"
    links:
      - postgres
    ports:
      - "5000:5000"
    volumes:
      - './code:/code'
    networks:
      - default
    depends_on:
      - postgres

  postgres:
    container_name: "postgres"
    image: "postgres:10"
    environment:
      - POSTGRES_PASSWORD=admin_dip
      - POSTGRES_USER=admin_dip
      - POSTGRES_DB=dipdb
    volumes:
      - ./postgres:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5439:5432
    networks:
      - default

  chrome-driver:
    container_name: "chrome-driver"
    image: selenium/standalone-chrome:88.0
    volumes:
      - /dev/shm:/dev/shm
    ports:
      - 4444:4444
    networks:
      - default
  
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - './frontend:/app'
      - 'frontend/app/node_modules'
    ports:
      - 3001:3000
    environment:
      - CHOKIDAR_USEPOLLING=true  
    stdin_open: true   

  lookup:
    container_name: "lookup"
    image: "lookup"
    build: "./services"
    ports:
      - 8888:8888
    networks:
      - default